const std = @import("std");
const WINAPI = std.os.windows.WINAPI;

pub const HOOKPROC = *opaque {};
pub const HHOOK = *anyopaque;

pub const KS_DOWN: i32 = 0x8000;
pub const KS_PRESSED: i32 = 0x0001;

pub const VK_LBUTTON = @as(u32, 0x01);
pub const VK_RBUTTON = @as(u32, 0x02);
pub const VK_CANCEL = @as(u32, 0x03);
pub const VK_MBUTTON = @as(u32, 0x04);
pub const VK_XBUTTON1 = @as(u32, 0x05);
pub const VK_XBUTTON2 = @as(u32, 0x06);
pub const VK_BACK = @as(u32, 0x08);
pub const VK_TAB = @as(u32, 0x09);
pub const VK_CLEAR = @as(u32, 0x0C);
pub const VK_RETURN = @as(u32, 0x0D);
pub const VK_SHIFT = @as(u32, 0x10);
pub const VK_CONTROL = @as(u32, 0x11);
pub const VK_MENU = @as(u32, 0x12);
pub const VK_PAUSE = @as(u32, 0x13);
pub const VK_CAPITAL = @as(u32, 0x14);
pub const VK_KANA = @as(u32, 0x15);
pub const VK_HANGUL = @as(u32, 0x15);
pub const VK_IME_ON = @as(u32, 0x16);
pub const VK_JUNJA = @as(u32, 0x17);
pub const VK_FINAL = @as(u32, 0x18);
pub const VK_HANJA = @as(u32, 0x19);
pub const VK_KANJI = @as(u32, 0x19);
pub const VK_IME_OFF = @as(u32, 0x1A);
pub const VK_ESCAPE = @as(u32, 0x1B);
pub const VK_CONVERT = @as(u32, 0x1C);
pub const VK_NONCONVERT = @as(u32, 0x1D);
pub const VK_ACCEPT = @as(u32, 0x1E);
pub const VK_MODECHANGE = @as(u32, 0x1F);
pub const VK_SPACE = @as(u32, 0x20);
pub const VK_PRIOR = @as(u32, 0x21);
pub const VK_NEXT = @as(u32, 0x22);
pub const VK_END = @as(u32, 0x23);
pub const VK_HOME = @as(u32, 0x24);
pub const VK_LEFT = @as(u32, 0x25);
pub const VK_UP = @as(u32, 0x26);
pub const VK_RIGHT = @as(u32, 0x27);
pub const VK_DOWN = @as(u32, 0x28);
pub const VK_SELECT = @as(u32, 0x29);
pub const VK_PRINT = @as(u32, 0x2A);
pub const VK_EXECUTE = @as(u32, 0x2B);
pub const VK_SNAPSHOT = @as(u32, 0x2C);
pub const VK_INSERT = @as(u32, 0x2D);
pub const VK_DELETE = @as(u32, 0x2E);
pub const VK_HELP = @as(u32, 0x2F);
pub const VK_0 = @as(u32, 0x30);
pub const VK_1 = @as(u32, 0x31);
pub const VK_2 = @as(u32, 0x32);
pub const VK_3 = @as(u32, 0x33);
pub const VK_4 = @as(u32, 0x34);
pub const VK_5 = @as(u32, 0x35);
pub const VK_6 = @as(u32, 0x36);
pub const VK_7 = @as(u32, 0x37);
pub const VK_8 = @as(u32, 0x38);
pub const VK_9 = @as(u32, 0x39);
pub const VK_A = @as(u32, 0x41);
pub const VK_B = @as(u32, 0x42);
pub const VK_C = @as(u32, 0x43);
pub const VK_D = @as(u32, 0x44);
pub const VK_E = @as(u32, 0x45);
pub const VK_F = @as(u32, 0x46);
pub const VK_G = @as(u32, 0x47);
pub const VK_H = @as(u32, 0x48);
pub const VK_I = @as(u32, 0x49);
pub const VK_J = @as(u32, 0x4A);
pub const VK_K = @as(u32, 0x4B);
pub const VK_L = @as(u32, 0x4C);
pub const VK_M = @as(u32, 0x4D);
pub const VK_N = @as(u32, 0x4E);
pub const VK_O = @as(u32, 0x4F);
pub const VK_P = @as(u32, 0x50);
pub const VK_Q = @as(u32, 0x51);
pub const VK_R = @as(u32, 0x52);
pub const VK_S = @as(u32, 0x53);
pub const VK_T = @as(u32, 0x54);
pub const VK_U = @as(u32, 0x55);
pub const VK_V = @as(u32, 0x56);
pub const VK_W = @as(u32, 0x57);
pub const VK_X = @as(u32, 0x58);
pub const VK_Y = @as(u32, 0x59);
pub const VK_Z = @as(u32, 0x5A);
pub const VK_LWIN = @as(u32, 0x5B);
pub const VK_RWIN = @as(u32, 0x5C);
pub const VK_APPS = @as(u32, 0x5D);
pub const VK_SLEEP = @as(u32, 0x5F);
pub const VK_NUMPAD0 = @as(u32, 0x60);
pub const VK_NUMPAD1 = @as(u32, 0x61);
pub const VK_NUMPAD2 = @as(u32, 0x62);
pub const VK_NUMPAD3 = @as(u32, 0x63);
pub const VK_NUMPAD4 = @as(u32, 0x64);
pub const VK_NUMPAD5 = @as(u32, 0x65);
pub const VK_NUMPAD6 = @as(u32, 0x66);
pub const VK_NUMPAD7 = @as(u32, 0x67);
pub const VK_NUMPAD8 = @as(u32, 0x68);
pub const VK_NUMPAD9 = @as(u32, 0x69);
pub const VK_MULTIPLY = @as(u32, 0x6A);
pub const VK_ADD = @as(u32, 0x6B);
pub const VK_SEPARATOR = @as(u32, 0x6C);
pub const VK_SUBTRACT = @as(u32, 0x6D);
pub const VK_DECIMAL = @as(u32, 0x6E);
pub const VK_DIVIDE = @as(u32, 0x6F);
pub const VK_F1 = @as(u32, 0x70);
pub const VK_F2 = @as(u32, 0x71);
pub const VK_F3 = @as(u32, 0x72);
pub const VK_F4 = @as(u32, 0x73);
pub const VK_F5 = @as(u32, 0x74);
pub const VK_F6 = @as(u32, 0x75);
pub const VK_F7 = @as(u32, 0x76);
pub const VK_F8 = @as(u32, 0x77);
pub const VK_F9 = @as(u32, 0x78);
pub const VK_F10 = @as(u32, 0x79);
pub const VK_F11 = @as(u32, 0x7A);
pub const VK_F12 = @as(u32, 0x7B);
pub const VK_F13 = @as(u32, 0x7C);
pub const VK_F14 = @as(u32, 0x7D);
pub const VK_F15 = @as(u32, 0x7E);
pub const VK_F16 = @as(u32, 0x7F);
pub const VK_F17 = @as(u32, 0x80);
pub const VK_F18 = @as(u32, 0x81);
pub const VK_F19 = @as(u32, 0x82);
pub const VK_F20 = @as(u32, 0x83);
pub const VK_F21 = @as(u32, 0x84);
pub const VK_F22 = @as(u32, 0x85);
pub const VK_F23 = @as(u32, 0x86);
pub const VK_F24 = @as(u32, 0x87);
pub const VK_NUMLOCK = @as(u32, 0x90);
pub const VK_SCROLL = @as(u32, 0x91);
pub const VK_LSHIFT = @as(u32, 0xA0);
pub const VK_RSHIFT = @as(u32, 0xA1);
pub const VK_LCONTROL = @as(u32, 0xA2);
pub const VK_RCONTROL = @as(u32, 0xA3);
pub const VK_LMENU = @as(u32, 0xA4);
pub const VK_RMENU = @as(u32, 0xA5);
pub const VK_BROWSER_BACK = @as(u32, 0xA6);
pub const VK_BROWSER_FORWARD = @as(u32, 0xA7);
pub const VK_BROWSER_REFRESH = @as(u32, 0xA8);
pub const VK_BROWSER_STOP = @as(u32, 0xA9);
pub const VK_BROWSER_SEARCH = @as(u32, 0xAA);
pub const VK_BROWSER_FAVORITES = @as(u32, 0xAB);
pub const VK_BROWSER_HOME = @as(u32, 0xAC);
pub const VK_VOLUME_MUTE = @as(u32, 0xAD);
pub const VK_VOLUME_DOWN = @as(u32, 0xAE);
pub const VK_VOLUME_UP = @as(u32, 0xAF);
pub const VK_MEDIA_NEXT_TRACK = @as(u32, 0xB0);
pub const VK_MEDIA_PREV_TRACK = @as(u32, 0xB1);
pub const VK_MEDIA_STOP = @as(u32, 0xB2);
pub const VK_MEDIA_PLAY_PAUSE = @as(u32, 0xB3);
pub const VK_LAUNCH_MAIL = @as(u32, 0xB4);
pub const VK_LAUNCH_MEDIA_SELECT = @as(u32, 0xB5);
pub const VK_LAUNCH_APP1 = @as(u32, 0xB6);
pub const VK_LAUNCH_APP2 = @as(u32, 0xB7);
pub const VK_OEM_1 = @as(u32, 0xBA);
pub const VK_OEM_PLUS = @as(u32, 0xBB);
pub const VK_OEM_COMMA = @as(u32, 0xBC);
pub const VK_OEM_MINUS = @as(u32, 0xBD);
pub const VK_OEM_PERIOD = @as(u32, 0xBE);
pub const VK_OEM_2 = @as(u32, 0xBF);
pub const VK_OEM_3 = @as(u32, 0xC0);
pub const VK_OEM_4 = @as(u32, 0xDB);
pub const VK_OEM_5 = @as(u32, 0xDC);
pub const VK_OEM_6 = @as(u32, 0xDD);
pub const VK_OEM_7 = @as(u32, 0xDE);
pub const VK_OEM_8 = @as(u32, 0xDF);
pub const VK_OEM_102 = @as(u32, 0xE2);
pub const VK_PROCESSKEY = @as(u32, 0xE5);
pub const VK_PACKET = @as(u32, 0xE7);
pub const VK_ATTN = @as(u32, 0xF6);
pub const VK_CRSEL = @as(u32, 0xF7);
pub const VK_EXSEL = @as(u32, 0xF8);
pub const VK_EREOF = @as(u32, 0xF9);
pub const VK_PLAY = @as(u32, 0xFA);
pub const VK_ZOOM = @as(u32, 0xFB);
pub const VK_NONAME = @as(u32, 0xFC);
pub const VK_PA1 = @as(u32, 0xFD);
pub const VK_OEM_CLEAR = @as(u32, 0xFE);

pub extern "user32" fn SetWindowsHookExA(idHook: i32, lpfn: *opaque {}, hmod: *opaque {}, dwThreadId: u32) callconv(WINAPI) ?c_int;

pub extern "user32" fn CallNextHookEx(hhk: *anyopaque, ncode: i32, wParam: usize, lParam: isize) callconv(WINAPI) isize;

pub extern "user32" fn UnhookWindowsHookEx(hhk: *anyopaque) callconv(WINAPI) isize;

pub extern "user32" fn GetAsyncKeyState(vKey: i32) callconv(WINAPI) i16;
